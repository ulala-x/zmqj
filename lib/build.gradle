/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

java {
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.release = 11
}
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'


    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.1'

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.zeromq'
            artifactId = 'zmqj'
            version = '4.3.4.1'
            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'zmqj library '
                description = 'java binder for zeromq'
                url = 'https://github.com/ulala-x/zmqj'

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'ualal-x'
                        name = 'ualal-x'
                        email = 'ulala.the.great@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/ulala-x/zmqj'
                    url = 'https://github.com/ulala-x/zmqj.git'
                }
            }
        }

    }
}





javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}